{"version":3,"sources":["assets/scss/modal.module.scss","assets/scss/filter.module.scss","pages/Characters/Characters.reducer.js","pages/Episodes/Episodes.reducer.js","pages/Locations/Locations.reducer.js","pages/MyWatchList/MyWatchList.reducer.js","redux/reducers/index.js","redux/store.js","components/Navigation.js","components/TabPanel.js","components/Pagination.js","components/Modal.js","components/ModalContent.js","components/Select.js","components/Filter.js","components/Input.js","components/Button.js","components/Table.js","pages/Characters/Characters.action.js","pages/Characters/Characters.js","pages/Episodes/Episodes.action.js","pages/Episodes/Episodes.js","pages/Locations/Locations.action.js","pages/Locations/Locations.js","pages/MyWatchList/MyWatchList.action.js","pages/MyWatchList/MyWatchList.js","App.js","index.js","assets/scss/general.module.scss"],"names":["module","exports","initialState","loadingCharacter","loadedCharacter","character","info","status","gender","error","characterReducer","state","action","type","payload","results","loadingEpisode","loadedEpisode","episode","episodeReducer","loadingLocations","loadedLocations","locations","locationsReducer","list","id","cheked","columns","field","headerName","filterable","sortable","minWidth","flex","checked","watchListReducer","JSON","parse","localStorage","setItem","newEpisode","Date","now","episodes","stringify","rootReducer","combineReducers","Reducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Navigation","value","setValue","tabs","history","useHistory","AppBar","position","color","Tabs","onChange","event","newValue","indicatorColor","textColor","map","tab","index","Tab","label","name","a11yProps","onClick","link","push","TabPanel","props","children","other","role","hidden","Box","div","useStyles","makeStyles","theme","root","marginTop","spacing","BasicPagination","count","page","handleChange","classes","className","Pagination","getModalStyle","top","left","transform","paper","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","SimpleModal","handleClose","open","React","useState","modalStyle","Modal","onClose","style","ModalContent","modalInfo","styles","typography","image","Avatar","alt","img","src","Typography","component","species","created","formControl","margin","selectEmpty","NativeSelects","items","empty","setEmpty","FormControl","size","variant","InputLabel","htmlFor","Select","native","item","Filter","filter","Input","linkRef","noValidate","autoComplete","TextField","ref","ContainedButtons","Button","DataTable","rows","setCheked","height","onSelectionModelChange","itm","pageSize","selectionModel","checkboxSelection","getCaracter","arg","dispatch","a","console","log","axios","get","response","data","message","inline","display","connect","characters","bindActionCreators","CharacterActions","setPage","setOpen","setModalInfo","useEffect","Grid","container","xs","sm","List","ListItem","alignItems","handleOpen","ListItemAvatar","ListItemText","primary","secondary","Math","ceil","pages","getEpisode","StyledTableCell","withStyles","head","common","white","body","fontSize","TableCell","StyledTableRow","hover","TableRow","colName","table","EpisodeActions","TableContainer","Paper","Table","TableHead","TableBody","air_date","getLocations","LocationsActions","dimension","getWatchList","getItem","getCheckedEpisode","addEpisode","checkedEpisode","watchList","watchListActions","inputEl","useRef","topList","el","current","querySelector","tabIems","App","useTheme","clear","axis","direction","onChangeIndex","dir","Episodes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76c167b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1SpJo\",\"typography\":\"modal_typography__1GAoP\",\"img\":\"modal_img__2fW8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__3B_9a\"};","const initialState = {\r\n    loadingCharacter: false,\r\n    loadedCharacter: false,\r\n    character: [],\r\n    info: [],\r\n    status: ['alive', 'dead', 'unknown'],\r\n    gender: ['female', 'male', 'genderless', 'unknown'],\r\n    error: null,\r\n}\r\n\r\nexport default function characterReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_CHARACTER_REQUEST':\r\n            return { ...initialState, loadingCharacter: true }\r\n\r\n        case 'GET_CHARACTER_SUCCESS':\r\n            return { ...state, loadingCharacter: false, loadedCharacter: true, character: action.payload.results, info: action.payload.info }\r\n\r\n        case 'GET_CHARACTER_ERROR':\r\n            return { ...state, loadingCharacter: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    loadingEpisode: false,\r\n    loadedEpisode: false,\r\n    episode: [],\r\n    info: [],\r\n    error: null,\r\n}\r\n\r\nexport default function episodeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_EPISODE_REQUEST':\r\n            return { ...initialState, loadingEpisode: true }\r\n\r\n        case 'GET_EPISODE_SUCCESS':\r\n            return { ...state, loadingEpisode: false, loadedEpisode: true, episode: action.payload.results, info: action.payload.info }\r\n\r\n        case 'GET_EPISODE_ERROR':\r\n            return { ...state, loadingEpisode: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    loadingLocations: false,\r\n    loadedLocations: false,\r\n    locations: [],\r\n    info: [],\r\n    error: null,\r\n}\r\n\r\nexport default function locationsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_LOCATIONS_REQUEST':\r\n            return { ...initialState, loadingLocations: true }\r\n\r\n        case 'GET_LOCATIONS_SUCCESS':\r\n            return { ...state, loadingLocations: false, loadedLocations: true, locations: action.payload.results, info: action.payload.info }\r\n\r\n        case 'GET_LOCATIONS_ERROR':\r\n            return { ...state, loadingLocations: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    list: [\r\n        { id: 1, episode: 'Snow', cheked: true },\r\n        { id: 2, episode: 'Lannister', cheked: false }\r\n    ],\r\n    columns: [\r\n        { field: 'id', headerName: 'ID', filterable: false, sortable: false, minWidth: 250 },\r\n        { field: 'episode', filterable: false, headerName: 'Episode', flex: 1 }\r\n    ],\r\n    checked: []\r\n}\r\n\r\nexport default function watchListReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case 'GET_EPISODE':\r\n            return { ...state, list: JSON.parse(action.payload) }\r\n\r\n        case 'GET_CHECKED_EPISODE':\r\n            return { ...state, checked: action.payload }\r\n\r\n        case 'CHECKED_EPISODE':\r\n            const checked = action.payload;\r\n            localStorage.setItem('checked', checked);\r\n            return { ...state, checked: checked }\r\n\r\n        case 'ADD_EPISODE':\r\n            let newEpisode = {\r\n                id: Date.now(),\r\n                episode: action.payload,\r\n                cheked: false\r\n            };\r\n            const episodes = [...state.list, newEpisode];\r\n            localStorage.setItem('episode', JSON.stringify(episodes));\r\n            return {\r\n                ...state,\r\n                list: episodes,\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport * as Reducers from './rootReducer'\r\n\r\nconst rootReducer = combineReducers({ ...Reducers });\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react'\r\nimport { useHistory } from \"react-router\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst Navigation = ({ value, setValue, tabs }) => {\r\n    const history = useHistory();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        localStorage.setItem('page', newValue);\r\n    };\r\n    const changeLink = (event, link) => {\r\n        history.push(link)\r\n        // localStorage.setItem('page', index);\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n            >\r\n                {tabs.map((tab, index) => {\r\n                    return (\r\n                        <Tab key={tab.id} label={tab.name} {...a11yProps(index)} onClick={(event) => changeLink(event, tab.link)} />\r\n                    )\r\n                })}\r\n            </Tabs>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navigation;","\r\nimport React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box div={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\nexport default TabPanel;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function BasicPagination({ count, page, handleChange }) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Pagination count={count} color=\"primary\" page={page} onChange={handleChange} />\n        </div>\n    );\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\n\r\nexport default function SimpleModal({ handleClose, open, children }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    {children}\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport styles from '../assets/scss/modal.module.scss';\r\n\r\nconst ModalContent = ({ modalInfo }) => {\r\n    return (\r\n        <div className={styles.typography}>\r\n            {modalInfo.image && <Avatar alt=\"Remy Sharp\" className={styles.img} src={modalInfo.image} />}\r\n\r\n            {modalInfo.name && <Typography component=\"h2\" color=\"textPrimary\">\r\n                {modalInfo.name}\r\n            </Typography>}\r\n            {modalInfo.status && <>\r\n                <Typography component=\"span\" color=\"textPrimary\">\r\n                    <b>STATUS: </b>\r\n                </Typography>\r\n                <Typography component=\"h4\" color=\"textPrimary\">\r\n                    {modalInfo.status}\r\n                </Typography>\r\n            </>}\r\n            {modalInfo.species && <>\r\n                <Typography component=\"span\" color=\"textPrimary\">\r\n                    <b>SPECIES: </b>\r\n                </Typography>\r\n                <Typography component=\"h4\" color=\"textPrimary\">\r\n                    {modalInfo.species}\r\n                </Typography>\r\n            </>}\r\n            {modalInfo.type && <>\r\n                <Typography component=\"span\" color=\"textPrimary\">\r\n                    <b>TYPE: </b>\r\n                </Typography>\r\n                <Typography component=\"h4\" color=\"textPrimary\">\r\n                    {modalInfo.type}\r\n                </Typography>\r\n            </>}\r\n            {modalInfo.gender && <>\r\n                <Typography component=\"span\" color=\"textPrimary\">\r\n                    <b>GENDER: </b>\r\n                </Typography>\r\n                <Typography component=\"h4\" color=\"textPrimary\">\r\n                    {modalInfo.gender}\r\n                </Typography>\r\n            </>}\r\n            {modalInfo.created && <>\r\n                <Typography component=\"span\" color=\"textPrimary\">\r\n                    <b>CREATED: </b>\r\n                </Typography>\r\n                <Typography component=\"h4\" color=\"textPrimary\">\r\n                    {modalInfo.created}\r\n                </Typography>\r\n            </>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalContent;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: '30ch',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function NativeSelects({ items, label }) {\r\n    const classes = useStyles();\r\n    const [empty, setEmpty] = React.useState(true);\r\n\r\n    const handleChange = (event, value) => {\r\n        setEmpty(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl size=\"small\" variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\">{label}</InputLabel>\r\n                <Select\r\n                    native\r\n                    onChange={handleChange}\r\n                    label={label}\r\n                >\r\n                    {empty && <option value=''></option>}\r\n                    {items.map((item, index) => <option key={index} value={item}>{item}</option>)}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport styles from '../assets/scss/filter.module.scss';\r\n\r\nconst Filter = ({ children }) => {\r\n    return (\r\n        <div className={styles.filter}>\r\n            {children}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Filter;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '30ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Input({ label, linkRef }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField ref={linkRef} size=\"small\" id=\"outlined-basic\" label={label} variant=\"outlined\" />\r\n        </form>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n\r\n}));\r\n\r\nexport default function ContainedButtons({ onClick, label }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button onClick={onClick} size=\"large\" variant=\"contained\" color=\"primary\">\r\n                {label}\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\n\r\nexport default function DataTable({ rows, columns, setCheked, checked }) {\r\n    return (\r\n        <div style={{ height: 400, width: '100%' }}>\r\n            <DataGrid onSelectionModelChange={itm => setCheked(itm)} rows={rows} columns={columns} pageSize={5} selectionModel={checked} checkboxSelection />\r\n        </div>\r\n    );\r\n}","\r\n// import envConfig from '../../api/base'\r\nimport axios from 'axios'\r\n\r\n/**\r\n * Get character\r\n */\r\nconst getCaracter = (...arg) => async dispatch => {\r\n    dispatch({ type: 'GET_CHARACTER_REQUEST' })\r\n    console.log(...arg)\r\n    try {\r\n        const response = await axios.get(`https://rickandmortyapi.com/api/character/?page=1&name=&status=`)\r\n        dispatch({ type: 'GET_CHARACTER_SUCCESS', payload: response.data })\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: 'GET_CHARACTER_ERROR', payload: err.message })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    getCaracter,\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as CharacterActions from './Characters.action'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Pagination, Modal, ModalContent, Filter, Select, Input, Button } from '../../components'\r\nimport './characters.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\n\r\nfunction Characters(props) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(1);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [modalInfo, setModalInfo] = React.useState({});\r\n\r\n    const handleOpen = (event, item) => {\r\n        setOpen(true);\r\n        setModalInfo(item);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event, value) => {\r\n        setPage(value);\r\n        props.getCaracter(value);\r\n    };\r\n    React.useEffect(() => {\r\n        props.getCaracter(page);\r\n    }, [])\r\n    return (\r\n        <div className={classes.root}>\r\n            {props.loadedCharacter &&\r\n                <>\r\n                    <Filter>\r\n                        <Input label={'Species'} />\r\n                        <Select items={props.status} label={'Status'} />\r\n                        <Select items={props.gender} label={'Gender'} />\r\n                        <Button label=\"Filter\" />\r\n                    </Filter>\r\n                    <Grid container >\r\n                        {props.character.map((item, index) => {\r\n                            return (\r\n                                <Grid key={index} item xs={6} sm={6}>\r\n                                    <List className={classes.root}>\r\n                                        <ListItem alignItems=\"flex-start\" onClick={(event) => handleOpen(event, item)}>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar alt=\"Remy Sharp\" src={item.image} />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                                primary={item.name}\r\n                                                secondary={\r\n                                                    <>\r\n                                                        <Typography\r\n                                                            component=\"span\"\r\n                                                            variant=\"body2\"\r\n                                                            className={classes.inline}\r\n                                                            color=\"textPrimary\"\r\n                                                        >\r\n                                                            Statuse:\r\n                                                        </Typography>\r\n                                                        {`  ${item.status}`}\r\n                                                    </>\r\n                                                }\r\n                                            />\r\n                                            <div className=\"card-info\">\r\n                                                <span><b>Species: </b> {item.species}</span>\r\n                                                <span><b>Gender: </b> {item.gender}</span>\r\n                                            </div>\r\n                                        </ListItem>\r\n                                    </List>\r\n                                </Grid>\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                    <Pagination count={Math.ceil(props.info.pages)} page={page} handleChange={handleChange} />\r\n                    <Modal handleClose={handleClose} open={open} >\r\n                        <ModalContent modalInfo={modalInfo} />\r\n                    </Modal>\r\n                </>\r\n            }\r\n        </div >\r\n\r\n    );\r\n}\r\nconst mapStateToProps = state => ({\r\n    loadingCharacter: state.characters.loadingCharacter,\r\n    loadedCharacter: state.characters.loadedCharacter,\r\n    character: state.characters.character,\r\n    info: state.characters.info,\r\n    status: state.characters.status,\r\n    gender: state.characters.gender\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    ...CharacterActions\r\n}, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Characters)","import axios from 'axios'\r\n\r\n/**\r\n * Get episode\r\n */\r\nconst getEpisode = (page) => async dispatch => {\r\n    dispatch({ type: 'GET_EPISODE_REQUEST' })\r\n\r\n    try {\r\n        const response = await axios.get(`https://rickandmortyapi.com/api/episode?page=${page}`)\r\n        dispatch({ type: 'GET_EPISODE_SUCCESS', payload: response.data })\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: 'GET_EPISODE_ERROR', payload: err.message })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    getEpisode,\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport * as EpisodeActions from './Episodes.action'\r\nimport { Pagination, Filter, Input, Button } from '../../components'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: '#3f51b5',\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst colName = ['ID', 'NAME', 'AIR DATE', 'EPISODE']\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nfunction EnhancedTable(props) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(1);\r\n    React.useEffect(() => {\r\n        props.getEpisode(page);\r\n    }, [])\r\n    const handleChange = (event, value) => {\r\n        setPage(value);\r\n        props.getEpisode(value);\r\n    };\r\n    return (\r\n        <>\r\n            <Filter>\r\n                <Input label={'Name'} />\r\n                <Button label=\"Filter\" />\r\n            </Filter>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {colName && colName.map((item, index) => <StyledTableCell key={`${index}__${item}`}>{item}</StyledTableCell>)}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.episode.map((item, index) => (\r\n                            <StyledTableRow key={`${props.locations}__${index}`}>\r\n                                <StyledTableCell>{item.id}</StyledTableCell>\r\n                                <StyledTableCell>{item.name}</StyledTableCell>\r\n                                <StyledTableCell>{item.air_date}</StyledTableCell>\r\n                                <StyledTableCell>{item.episode}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <Pagination count={Math.ceil(props.info.count / 20)} page={page} handleChange={handleChange} />\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loadingEpisode: state.episodes.loadingEpisode,\r\n    loadedEpisode: state.episodes.loadedEpisode,\r\n    episode: state.episodes.episode,\r\n    info: state.episodes.info,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    ...EpisodeActions\r\n}, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnhancedTable)","import axios from 'axios'\r\n\r\n/**\r\n * Get Locations\r\n */\r\nconst getLocations = (page) => async dispatch => {\r\n    dispatch({ type: 'GET_LOCATIONS_REQUEST' })\r\n\r\n    try {\r\n        const response = await axios.get(`https://rickandmortyapi.com/api/location?page=${page}`)\r\n        dispatch({ type: 'GET_LOCATIONS_SUCCESS', payload: response.data })\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: 'GET_LOCATIONS_ERROR', payload: err.message })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    getLocations,\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport * as LocationsActions from './Locations.action'\r\nimport { Pagination, Filter, Input, Button } from '../../components'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: '#3f51b5',\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst colName = ['ID', 'NAME', 'TYPE', 'DIMENSION']\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nfunction Locations(props) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(1);\r\n    React.useEffect(() => {\r\n        props.getLocations(page);\r\n    }, [])\r\n    const handleChange = (event, value) => {\r\n        setPage(value);\r\n        props.getLocations(value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Filter>\r\n                <Input label={'Name'} />\r\n                <Input label={'Type'} />\r\n                <Input label={'Dimension'} />\r\n                <Button label=\"Filter\" />\r\n            </Filter>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {colName && colName.map((item, index) => <StyledTableCell key={`${index}__${item}`}>{item}</StyledTableCell>)}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.locations.map((item, index) => (\r\n                            <StyledTableRow key={`${props.locations}__${index}`}>\r\n                                <StyledTableCell>\r\n                                    {item.id}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>{item.name}</StyledTableCell>\r\n                                <StyledTableCell>{item.type}</StyledTableCell>\r\n                                <StyledTableCell>{item.dimension}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <Pagination count={Math.ceil(props.info.pages)} page={page} handleChange={handleChange} />\r\n            </TableContainer>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loadingLocations: state.locations.loadingLocations,\r\n    loadedLocations: state.locations.loadedLocations,\r\n    locations: state.locations.locations,\r\n    info: state.locations.info,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    ...LocationsActions\r\n}, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations)","// import axios from 'axios'\r\n\r\n/**\r\n * Get episode\r\n */\r\nconst getWatchList = () => dispatch => {\r\n    const episode = localStorage.getItem('episode')\r\n    dispatch({ type: 'GET_EPISODE', payload: episode })\r\n}\r\nconst getCheckedEpisode = () => dispatch => {\r\n    const episode = localStorage.getItem('checked')\r\n    dispatch({ type: 'GET_CHECKED_EPISODE', payload: episode })\r\n}\r\nconst addEpisode = (episode) => ({\r\n    type: 'ADD_EPISODE',\r\n    payload: episode,\r\n});\r\nconst checkedEpisode = (episode) => ({\r\n    type: 'CHECKED_EPISODE',\r\n    payload: episode,\r\n});\r\n\r\n\r\n\r\nexport {\r\n    getWatchList,\r\n    getCheckedEpisode,\r\n    checkedEpisode,\r\n    addEpisode\r\n}\r\n\r\n","import React, { useRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as watchListActions from './MyWatchList.action'\r\nimport { Input, Button, Table } from '../../components'\r\nimport styles from '../../assets/scss/general.module.scss';\r\n\r\nconst MyWatchList = (props) => {\r\n    const inputEl = useRef(null);\r\n    React.useEffect(() => {\r\n        if (localStorage.getItem('episode')) {\r\n            props.getWatchList();\r\n        }\r\n        if (localStorage.getItem('checked')) {\r\n            props.getCheckedEpisode();\r\n        }\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n        const el = inputEl.current.querySelector('input').value;\r\n\r\n        if (el) {\r\n            props.addEpisode(el)\r\n            inputEl.current.querySelector('input').value = \"\";\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <h1>My Watch List</h1>\r\n            <div className={styles.topList}>\r\n                <Input linkRef={inputEl} label={'Enter Episode'} />\r\n                <Button onClick={handleClick} label=\"Add Episode\" />\r\n            </div>\r\n\r\n            <Table rows={props.list} columns={props.columns} setCheked={props.checkedEpisode} checked={props.checked} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    list: state.watchList.list,\r\n    columns: state.watchList.columns,\r\n    checked: state.watchList.checked\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    ...watchListActions\r\n}, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWatchList)","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport { Navigation, TabPanel } from './components'\n\nimport { Characters, Episodes, Locations, MyWatchList } from './pages'\nimport styles from './assets/scss/general.module.scss';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst tabIems = [\n  { id: 1, name: 'Characters page', link: 'characters' },\n  { id: 2, name: 'Episodes page', link: 'episodes' },\n  { id: 3, name: 'Locations page', link: 'locations' },\n  { id: 4, name: 'My watch list', link: 'my-watch' }\n];\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  React.useEffect(() => {\n    if (localStorage.getItem('page')) {\n      setValue(+localStorage.getItem('page'));\n    }\n  }, [])\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root, styles.clear}>\n      <Navigation value={value} setValue={setValue} tabs={tabIems} />\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <Characters />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <Episodes />\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          <Locations />\n        </TabPanel>\n        <TabPanel value={value} index={3} dir={theme.direction}>\n          <MyWatchList />\n        </TabPanel>\n\n      </SwipeableViews>\n\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clear\":\"general_clear__2B2ey\",\"topList\":\"general_topList__2WTg9\"};"],"sourceRoot":""}